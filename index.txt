7. Что такое всплытие события (Event Bubbling)?

11. Почему obj.someprop.x приводит к ошибке?
14. В чем разница между операторами "==" и "==="?
18. Что такое поднятие (Hoisting)?
19. Что такое область видимости (Scope)?
20. Что такое замыкание (Closures)?
21. Какие значения в JS являются ложными?
23. Для чего используется директива «use strict»?
25. Что такое прототип объекта?
29. В чем разница между методами call и apply?
48. Что такое объект Set?
50. Что такое промисы (Promises)?

в чем отличия vif ot vshow
для чего можно использовать фильтры
для чего используют key при отрисовке списков
для чего используют вьюикс 
что такое миксины и для чего их используют 
что такое фильтры 
что такое реактивность и каким образом можно писать код реактивно

что такое трансляция
Под трансляцией в самом широком смысле можно понимать процесс восприятия компьютером программы, написанной на некотором формальном языке. При всем своем различии формальные языки имеют много общего  и, в принципе, эквиваленты с точки зрения потенциальной возможности написать одну и ту же программу на любом из них.
Компиляция - преобразование объектов (данных и операций над ними) с входного языка в объекты  на другом языке для всей программы в целом с последующим выполнением полученной программы в виде отдельного шага.
Интерпретация - анализ отдельного объекта на входном языке с одновременным выполнением (интерпретацией).
Транспиляция — преобразование программы, написанной на одном языке программирования в качестве исходных данных, в эквивалентный код другой версии этого языка или в другой язык программирования того же уровня абстракции.

Модульное программирование
Согласно принципу модульности программа разбивается на отдельные смысловые части (модули).
Модуль – это функционально законченная часть программы. Например, модуль вычисления
определителя матрицы; модуль нахождения суммы элементов ряда.
Каждый модуль программируется отдельно, а затем модули объединяются в единую программу.
Модуль на языке программирования – это функция или процедура.


Текущая реализация экрана опирается на флаги. В программировании так называют переменные содержащие булевы значения.
constructor() {
  this.powerOn = false;
  this.screenOn = false;
}
Флаги часто (но не всегда!) - признак плохой архитектуры. Они имеют тенденцию множиться и пересекаться. Логика, завязанная на комбинации разных флагов, усложняет анализ кода:
if (!this.powerOn || !this.screenOn) {
  return;
}
Такой стиль программирования имеет свое название: "флаговое программирование". Так говорят про код, в котором трудно разобраться из-за наличия логики, завязанной на комбинацию флагов. А наличие флагов почти наверняка к этому приведет. Все дело в том, что количество состояний у систем, как правило, больше чем два. То есть одного флага никогда не будет достаточно.

От флагов возможно уйти, введя явное состояние системы. В нашем примере несложно заметить, что состояний всего три:

Объект это набор функций, которые работают с элементами данными, существование которых подразумевается неявно.
Структура данных это набор элементов данных с которыми работают функции, существование которых подразумевается неявно.


Класс - некая абстракция, логическая структура, описывающая поведение и характеристики. Например, машина. Она может ехать, сигналить и т.п.
Объект - конкретный экземпляр класса. Например, конкретная ваша машина.
Экземпляр класса - это одно и тоже, что и объект класса.

типы значений и сыылочные типы js

Асинхронное программирование — концепция программирования, при которой результат выполнения функции доступен спустя некоторое время в виде асинхронного (нарушающего стандартный порядок выполнения) вызова. Запуск длительных операций происходит без ожидания их завершения и не блокирует дальнейшее выполнение программы



Императивное программирование
Декларативное программирование

Структурное программирование

Функциональное программирование
ооп
Логическое программирование